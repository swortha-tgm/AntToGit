<project name="Hello" basedir="." default="main">

	<property name="classes.dir" value="build/classes" />
	<property name="junit.output.dir" value="htmlreport" />
	<property name="doc.dir" value="doc" />
	<property name="source.dir" value="src" />
	<property name="jar.dir" value="build/jar" />
	<property name="jar.name" value="${ant.project.name}.jar" />
	<property name="version" value="1.0" />
	<property name="translated.dir" value="build/src" />


	<path id="JUnit4.libraryclasspath">
		<pathelement location="lib/hamcrest-core.jar" />
		<pathelement location="lib/junit.jar" />
	</path>

	<path id="Hello.classpath">
		<pathelement location="${classes.dir}" />
		<path refid="JUnit4.libraryclasspath" />
	</path>

	<target name="clean">
		<delete dir="build" />
		<delete dir="doc" />
		<delete dir="htmlreport" />
	</target>

	<target name="compile">
		<mkdir dir="${classes.dir}" />
		<javac srcdir="${translated.dir}" destdir="${classes.dir}" />
	</target>

	<target name="jar" depends="compile, test, doc">
		<mkdir dir="${jar.dir}" />
		<jar destfile="${jar.dir}/${jar.name}" basedir="${classes.dir}">
			<manifest>
				<attribute name="Main-Class" value="hello.Hello" />
			</manifest>
			<fileset dir="." includes="${doc.dir}/**" />
			<fileset dir="." includes="${junit.output.dir}/**" />
			<fileset dir="${classes.dir}" includes="**/*.java" />
		</jar>
		<!-- Das ist hier auskomentiert, da der Build fehl schlaegt, 
		wenn kein Email-Passwort im XML angegeben ist -->
		<!--<antcall target="mailto"/> -->
	</target>

	<target name="run" depends="jar">
		<java jar="build/jar/${ant.project.name}.jar" fork="true" />
	</target>

	<target name="main" depends="clean,run" />


	<target name="compileTest" depends="compile" description="compile jUnit Test cases ">
		<javac srcdir="${test-dir}" destdir="${bin}" includeantruntime="true" nowarn="yes" debug="true" />
	</target>

	<target name="unittest" depends="compile">
		<mkdir dir="${junit.output.dir}" />
		<junit fork="yes" printsummary="withOutAndErr">
			<formatter type="xml" />
			<test name="test.HelloTest" todir="${junit.output.dir}" />
			<classpath refid="Hello.classpath" />
		</junit>
	</target>

	<target name="junitreport" depends="unittest">
		<mkdir dir="${junit.output.dir}" />
		<junitreport todir="${junit.output.dir}">
			<fileset dir="${junit.output.dir}">
				<include name="TEST-*.xml" />
			</fileset>
			<report format="frames" todir="${junit.output.dir}" />
		</junitreport>
	</target>


	<target name="test" depends="unittest,junitreport" />

	<target name="doc">
		<mkdir dir="${doc.dir}" />
		<javadoc sourcepath="${source.dir}" destdir="${doc.dir}" classpathref="Hello.classpath" />
	</target>

	<target name="copy" depends="jar">
		<input message="Bitte die IP des Remote-Servers eingeben" addproperty="remote.ip" />
		<input message="Bitte Username des Remote-Servers ${remote.ip} eingeben" addproperty="remote.user" />
		<input message="Bitte Passwort des Users ${remote.user} unter ${remote.ip} eingeben" addproperty="remote.password" />
		<scp file="${jar.dir}/${jar.name}" todir="${remote.user}:${remote.password}@${remote.ip}:${remote.dir}" trust="true" />
	</target>

	<macrodef name="git">
		<attribute name="command" />
		<attribute name="dir" default="" />
		<element name="args" optional="true" />
		<sequential>
			<echo message="git @{command}" />
			<exec executable="git" dir="@{dir}">
				<arg value="@{command}" />
				<args />
			</exec>
		</sequential>
	</macrodef>

	<target name="scm" description="Commits all changes to version git">
		<git command="add">
			<args>
				<arg value="." />
			</args>
		</git>
		<git command="commit">
			<args>
				<arg value="-am deploy-${ant.project.name}-${version}" />
			</args>
		</git>
		<git command="push">
			<args>
				<arg value="origin" />
				<arg value="master" />
			</args>
		</git>
	</target>

	<target name="mailto">
		<mail mailhost="sophos.tgm.ac.at" mailport="465" ssl="true" subject="BUILD" charset="utf-8" user="swortha" password="pw" failonerror="true">
			<from address="swortha@student.tgm.ac.at" />
			<to address="swortha@student.tgm.ac.at" />
			<message>Your build is ready</message>
		</mail>
	</target>

	<target name="lang-de">
		<translate toDir="${translated.dir}" starttoken="%" endtoken="%" bundle="languages/lang-de" bundlelanguage="de" forceoverwrite="yes" srcencoding="utf-8" destencoding="utf-8" bundleencoding="utf-8">
			<fileset dir="src">
				<include name="**/*.java" />
			</fileset>
		</translate>
	</target>

	<target name="lang-en">
		<translate toDir="${translated.dir}" starttoken="%" endtoken="%" bundle="languages/lang-en" bundlelanguage="en" forceoverwrite="yes" srcencoding="utf-8" destencoding="utf-8" bundleencoding="utf-8">
			<fileset dir="src">
				<include name="**/*.java" />
			</fileset>
		</translate>
	</target>

	<target name="lang-klingon">
		<translate toDir="${translated.dir}" starttoken="%" endtoken="%" bundle="languages/lang-klingon" bundlelanguage="en" forceoverwrite="yes" srcencoding="utf-8" destencoding="utf-8" bundleencoding="utf-8">
			<fileset dir="src">
				<include name="**/*.java" />
			</fileset>
		</translate>
	</target>

	<target name="main-de" depends="clean,lang-de">
		<antcall target="jar" />
		<antcall target="test" />
		<antcall target="doc" />
	</target>

	<target name="main-en" depends="clean,lang-en">
		<antcall target="jar" />
		<antcall target="test" />
		<antcall target="doc" />
	</target>

	<target name="main-klingon" depends="clean,lang-klingon">
		<antcall target="jar" />
		<antcall target="test" />
		<antcall target="doc" />
	</target>

</project>
